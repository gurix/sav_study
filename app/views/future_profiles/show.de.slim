.profile
  h1 = title 'Mein zukünftiges Mobilitätsprofil'
  - Faker::Lorem.paragraphs(16).each do | p |
    p= p
  hr
  .row
    .col-xs-12
      h3.text-center Kosten
  .row
    .col-xs-12.col-sm-7
      canvas id="costChart" width="100" height="50"
      - by_type = @subject.total_by_type(:costs, per: :week)
      - model_by_type = @subject.total_by_type(:model_costs, per: :week)
      javascript:
        var costChart = new Chart($("#costChart"),{
            type: 'bar',
            data: {
              labels: #{raw by_type.keys.map{ |type| t("shared.#{@subject.assigned_model}_movement_types.#{type}")}},
              datasets: [
                {
                  backgroundColor: "#000",
                  label: 'Zukünftig',
                  data: #{model_by_type.values},
                },
                {
                  backgroundColor: "#CCC",
                  label: 'Aktuell',
                  data: #{by_type.values},
                }
              ]
            },
            options: {
                scales: {
                    xAxes: [{
                        stacked: false
                    }],
                    yAxes: [{
                        stacked: false,
                        scaleLabel: {
                            display: true,
                            labelString: 'CHF'
                        }
                    }]
                }
            }
        });
    .col-xs-12.col-sm-5
      table.table
        thead
          tr
            th Verkehrsmittel
            th Zukünftig
            th Aktuell
            th 
        tbody
          - by_type.keys.each do |type|
            tr
              td = t("shared.#{@subject.assigned_model}_movement_types.#{type}")
              td = costs_in_chf(model_by_type["#{type}"])
              td = costs_in_chf(by_type["#{type}"])
              - difference = model_by_type["#{type}"] - by_type["#{type}"]
              td class="#{hilight_number(difference)}"
                = costs_in_chf(difference)
        tfoot
          tr
            th= t('shared.total')
            th = costs_in_chf(@subject.total(:model_costs, per: :week))
            th = costs_in_chf(@subject.total(:costs, per: :week))
            - difference = (@subject.total(:model_costs, per: :week) - @subject.total(:costs, per: :week)).round(2)
            th class="#{hilight_number(difference)}"
              = costs_in_chf(difference)
  hr
  .row
    .col-xs-12
      h3.text-center Reiszeiten
      .progress
        - blocked_duration = @subject.total(:model_blocked_duration)
        - duration = @subject.total(:model_duration)
        - free_duration = duration - blocked_duration
        .progress-bar.progress-bar-success style="width: #{((free_duration / duration)*100) - 10}%" nutzbare Zeit
        .progress-bar.progress-bar-danger style="width: #{((blocked_duration/duration)*100) + 10}%" blockierte Zeit

  .row
    .col-xs-12.col-sm-7
      canvas id="timeChart" width="100" height="50"
      - by_type = @subject.total_by_type(:duration, per: :week)
      - model_by_type = @subject.total_by_type(:model_duration, per: :week)
      javascript:
        var costChart = new Chart($("#timeChart"),{
            type: 'bar',
            data: {
              labels: #{raw by_type.keys.map{ |type| t("shared.#{@subject.assigned_model}_movement_types.#{type}")}},
              datasets: [
                {
                  backgroundColor: "#000",
                  label: 'Zukünftig',
                  data: #{model_by_type.values},
                },
                {
                  backgroundColor: "#CCC",
                  label: 'Aktuell',
                  data: #{by_type.values},
                }
              ]
            },
            options: {
                scales: {
                    xAxes: [{
                        stacked: false
                    }],
                    yAxes: [{
                        stacked: false,
                        scaleLabel: {
                            display: true,
                            labelString: 'Minutes'
                        }
                    }]
                }
            }
        });
    .col-xs-12.col-sm-5
      table.table
        thead
          tr
            th Verkehrsmittel
            th Zukünftig
            th Aktuell
            th 
        tbody
          - by_type.keys.each do |type|
            tr
              td = t("shared.#{@subject.assigned_model}_movement_types.#{type}")
              td = distance_of_time_in_words_or_empty(model_by_type["#{type}"].minutes)
              td = distance_of_time_in_words_or_empty(by_type["#{type}"].minutes)
              - difference = model_by_type["#{type}"] - by_type["#{type}"]
              td class="#{hilight_number(difference)}"
                = distance_of_time_in_words_or_empty(difference.minutes)
        tfoot
          tr
            th= t('shared.total')
            th = distance_of_time_in_words_or_empty(@subject.total(:model_duration, per: :week).minutes) if @subject.total(:model_duration, per: :week).minutes
            th = distance_of_time_in_words_or_empty(@subject.total(:duration, per: :week).minutes)
            - difference = (@subject.total(:model_duration, per: :week) - @subject.total(:duration, per: :week))
            th class="#{hilight_number(difference)}"
              = distance_of_time_in_words_or_empty(difference.minutes)
  hr
  .row
    .col-xs-12
      .dimension.text-center
        h3 Ökologie
    .col-xs-12
      .text-center.lead Noch keine Daten vorhanden.
  .row
    .col-xs-12
     - if @subject.assigned_model == 'pav' 
      p Die mit * gekennzeichneten Verkehrsmittel werden durch ein private selbstfahrende Fahrzeug ersetzt. 
     - if @subject.assigned_model == 'sav' 
      p Die mit * gekennzeichneten Verkehrsmittel werden durch ein öffentliches selbstfahrendes Fahrzeug ersetzt. 
  .row
    .col-xs-6
      = link_to t('shared.back'), subject_present_profile_path(@subject), class: 'btn btn-default'
    .col-xs-6
      = link_to t('shared.next'), new_subject_questionary_path(@subject), class: 'btn btn-success pull-right'
  p